{"ast":null,"code":"import arrivals from \"../server/trainData.js\";\nimport Train from \"../components/Train.js\";\nexport default function TrainList({\n  color,\n  stationList,\n  arriving,\n  direction,\n  trainList,\n  loading\n}) {\n  let filteredArrivals = trainList === null || trainList === void 0 ? void 0 : trainList.filter(arrival => {\n    if (arrival.LINE === color) {\n      //Also make sure station is correct\n      if (direction === null || direction === arrival.DIRECTION) {\n        if (arriving && arrival.WAITING_TIME === \"Arriving\" || !arriving && arrival.WAITING_TIME !== \"Arriving\" || arriving === null) {\n          if (stationList.includes(\"\")) {\n            //Null basically means all stations\n            return arrival;\n          } else {\n            if (stationList.includes(arrival.HEAD_SIGN)) {\n              return arrival;\n            }\n          }\n        }\n      }\n    }\n  });\n}\n_c = TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["arrivals","Train","TrainList","color","stationList","arriving","direction","trainList","loading","filteredArrivals","filter","arrival","LINE","DIRECTION","WAITING_TIME","includes","HEAD_SIGN","_c","$RefreshReg$"],"sources":["/Users/sohampati/bootcamp-f23-sohampati/exer6/marta-interface/src/pages/TrainList.js"],"sourcesContent":["import arrivals from \"../server/trainData.js\";\nimport Train from \"../components/Train.js\";\nexport default function TrainList({color,stationList, arriving, direction, trainList, loading}) {\n    let filteredArrivals = trainList?.filter( (arrival) => {\n        if (arrival.LINE === color) {\n            //Also make sure station is correct\n            if ( (direction === null)|| (direction === arrival.DIRECTION)) {\n            if ((arriving && (arrival.WAITING_TIME === \"Arriving\"))  || (!arriving && (arrival.WAITING_TIME !== \"Arriving\")) || (arriving === null)) {\n            if (stationList.includes(\"\")) { //Null basically means all stations\n            return arrival;\n            }else {\n                if (stationList.includes(arrival.HEAD_SIGN)) {\n                    return arrival;\n                }\n            }\n            }\n            }\n        }\n    })\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,eAAe,SAASC,SAASA,CAAC;EAACC,KAAK;EAACC,WAAW;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAO,CAAC,EAAE;EAC5F,IAAIC,gBAAgB,GAAGF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,MAAM,CAAGC,OAAO,IAAK;IACnD,IAAIA,OAAO,CAACC,IAAI,KAAKT,KAAK,EAAE;MACxB;MACA,IAAMG,SAAS,KAAK,IAAI,IAAKA,SAAS,KAAKK,OAAO,CAACE,SAAU,EAAE;QAC/D,IAAKR,QAAQ,IAAKM,OAAO,CAACG,YAAY,KAAK,UAAW,IAAO,CAACT,QAAQ,IAAKM,OAAO,CAACG,YAAY,KAAK,UAAY,IAAKT,QAAQ,KAAK,IAAK,EAAE;UACzI,IAAID,WAAW,CAACW,QAAQ,CAAC,EAAE,CAAC,EAAE;YAAE;YAChC,OAAOJ,OAAO;UACd,CAAC,MAAK;YACF,IAAIP,WAAW,CAACW,QAAQ,CAACJ,OAAO,CAACK,SAAS,CAAC,EAAE;cACzC,OAAOL,OAAO;YAClB;UACJ;QACA;MACA;IACJ;EACJ,CAAC,CAAC;AACN;AAACM,EAAA,GAjBuBf,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}