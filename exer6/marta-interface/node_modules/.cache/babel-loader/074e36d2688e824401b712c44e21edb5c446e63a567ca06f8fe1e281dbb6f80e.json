{"ast":null,"code":"var _jsxFileName = \"/Users/sohampati/bootcamp-f23-sohampati/exer6/marta-interface/src/components/NavBar.js\",\n  _s = $RefreshSig$();\nimport \"./NavBar.css\";\nimport React, { useState } from 'react';\nimport stations from '../server/stationData.js';\nimport Station from './Station.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  _s();\n  const [selectedStation, setSelectedStation] = useState('All Stations');\n  const color = props.color.toLowerCase();\n  const [filteredTrains, setFilteredTrains] = useState([]);\n  const allTrains = [];\n  useEffect(() => {\n    // Filter trains based on the selected station\n    if (selectedStation === 'All Stations') {\n      setFilteredTrains(allTrains);\n    } else {\n      const filtered = allTrains.filter(train => train.STATION === selectedStation);\n      setFilteredTrains(filtered);\n    }\n  }, [selectedStation, allTrains]);\n  const handleStationSelect = stationName => {\n    setSelectedStation(stationName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectStation\",\n      children: \"Select your starting station\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat\",\n      children: [/*#__PURE__*/_jsxDEV(Station, {\n        stationName: \"All Stations\",\n        onSelect: handleStationSelect,\n        isSelected: selectedStation === 'All Stations'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), stations[color].map(station => /*#__PURE__*/_jsxDEV(Station, {\n        stationName: station,\n        onSelect: handleStationSelect,\n        isSelected: station === selectedStation\n      }, station, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"wzDZk7q3vv0b6YxmJX6nOO6o4Kg=\");\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","stations","Station","jsxDEV","_jsxDEV","NavBar","props","_s","selectedStation","setSelectedStation","color","toLowerCase","filteredTrains","setFilteredTrains","allTrains","useEffect","filtered","filter","train","STATION","handleStationSelect","stationName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","isSelected","map","station","_c","$RefreshReg$"],"sources":["/Users/sohampati/bootcamp-f23-sohampati/exer6/marta-interface/src/components/NavBar.js"],"sourcesContent":["import \"./NavBar.css\"\nimport React, { useState } from 'react';\nimport stations from '../server/stationData.js';\nimport Station from './Station.js';\n\nexport default function NavBar(props) {\n  const [selectedStation, setSelectedStation] = useState('All Stations');\n  const color = props.color.toLowerCase();\n  const [filteredTrains, setFilteredTrains] = useState([]);\n  const allTrains = []; \n  useEffect(() => {\n    // Filter trains based on the selected station\n    if (selectedStation === 'All Stations') {\n      setFilteredTrains(allTrains);\n    } else {\n      const filtered = allTrains.filter((train) => train.STATION === selectedStation);\n      setFilteredTrains(filtered);\n    }\n  }, [selectedStation, allTrains]);\n\n  const handleStationSelect = (stationName) => {\n    setSelectedStation(stationName);\n    \n  };\n\n\n  return (\n    <div className=\"bar\">\n      <div className=\"selectStation\">Select your starting station</div>\n      <div className=\"stat\">\n        <Station stationName=\"All Stations\" onSelect={handleStationSelect} isSelected={selectedStation === 'All Stations'} />\n        {stations[color].map((station) => (\n          <Station\n            key = {station}\n            stationName = {station}\n            onSelect = {handleStationSelect}\n            isSelected = {station === selectedStation}\n          />\n        ))}\n      </div>\n      \n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,cAAc,CAAC;EACtE,MAAMU,KAAK,GAAGJ,KAAK,CAACI,KAAK,CAACC,WAAW,CAAC,CAAC;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMc,SAAS,GAAG,EAAE;EACpBC,SAAS,CAAC,MAAM;IACd;IACA,IAAIP,eAAe,KAAK,cAAc,EAAE;MACtCK,iBAAiB,CAACC,SAAS,CAAC;IAC9B,CAAC,MAAM;MACL,MAAME,QAAQ,GAAGF,SAAS,CAACG,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,OAAO,KAAKX,eAAe,CAAC;MAC/EK,iBAAiB,CAACG,QAAQ,CAAC;IAC7B;EACF,CAAC,EAAE,CAACR,eAAe,EAAEM,SAAS,CAAC,CAAC;EAEhC,MAAMM,mBAAmB,GAAIC,WAAW,IAAK;IAC3CZ,kBAAkB,CAACY,WAAW,CAAC;EAEjC,CAAC;EAGD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjEvB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnB,OAAA,CAACF,OAAO;QAACmB,WAAW,EAAC,cAAc;QAACO,QAAQ,EAAER,mBAAoB;QAACS,UAAU,EAAErB,eAAe,KAAK;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACpH1B,QAAQ,CAACS,KAAK,CAAC,CAACoB,GAAG,CAAEC,OAAO,iBAC3B3B,OAAA,CAACF,OAAO;QAENmB,WAAW,EAAIU,OAAQ;QACvBH,QAAQ,EAAIR,mBAAoB;QAChCS,UAAU,EAAIE,OAAO,KAAKvB;MAAgB,GAHnCuB,OAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACpB,EAAA,CAtCuBF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}