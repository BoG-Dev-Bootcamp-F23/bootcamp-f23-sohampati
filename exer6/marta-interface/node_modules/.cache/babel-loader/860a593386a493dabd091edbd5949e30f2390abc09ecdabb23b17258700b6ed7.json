{"ast":null,"code":"var _jsxFileName = \"/Users/sohampati/bootcamp-f23-sohampati/exer6/marta-interface/src/pages/LinesPage.js\",\n  _s = $RefreshSig$();\nimport NavBar from \"../components/NavBar\";\nimport MButton from \"./MButton\";\nimport \"./LinesPage.css\";\nimport TrainList from \"./TrainList\";\nimport LineSelect from \"../components/LineSelect\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinesPage(props) {\n  _s();\n  const [allStations, setAllStations] = useState({\n    \"GOLD\": [],\n    \"RED\": [],\n    \"BLUE\": [],\n    \"GREEN\": []\n  }); //Should be a list of station names\n  const [allTrains, setAllTrains] = useState([]); //Should be a list of train objects\n  const [color, setColor] = useState(\"GOLD\");\n  const [stationList, setStation] = useState([\"\"]);\n  const [arriving, setArriving] = useState(null); //3 states, null, Arriving, or Scheduled. \n  const [direction, setDirection] = useState(null); // N, W, E, S, or null for all.\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function getStations() {\n      const stations = {};\n      let goldData = await fetch(\"http://13.59.196.129:3001/stations/gold\");\n      goldData = await goldData.json();\n      stations[\"GOLD\"] = goldData;\n      let redData = await fetch(\"http://13.59.196.129:3001/stations/red\");\n      redData = await redData.json();\n      stations[\"RED\"] = goldData;\n      let blueData = await fetch(\"http://13.59.196.129:3001/stations/blue\");\n      blueData = await blueData.json();\n      stations[\"BLUE\"] = blueData;\n      let greenData = await fetch(\"http://13.59.196.129:3001/stations/green\");\n      greenData = await greenData.json();\n      stations[\"GREEN\"] = greenData;\n      setAllStations(stations);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lines-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lines\",\n      children: /*#__PURE__*/_jsxDEV(LineSelect, {\n        updateColor: setColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"station-train\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: \"\\\\\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"train-list\",\n        children: /*#__PURE__*/_jsxDEV(TrainList, {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}\n_s(LinesPage, \"l91nDQpgBiEDsl6FJ0Um6zZNhcA=\");\n_c = LinesPage;\nvar _c;\n$RefreshReg$(_c, \"LinesPage\");","map":{"version":3,"names":["NavBar","MButton","TrainList","LineSelect","useState","useEffect","jsxDEV","_jsxDEV","LinesPage","props","_s","allStations","setAllStations","allTrains","setAllTrains","color","setColor","stationList","setStation","arriving","setArriving","direction","setDirection","loading","setLoading","getStations","stations","goldData","fetch","json","redData","blueData","greenData","className","children","updateColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sohampati/bootcamp-f23-sohampati/exer6/marta-interface/src/pages/LinesPage.js"],"sourcesContent":["import NavBar from \"../components/NavBar\";\nimport MButton from \"./MButton\";\nimport \"./LinesPage.css\"\nimport TrainList from \"./TrainList\";\nimport LineSelect from \"../components/LineSelect\";\nimport {useState, useEffect} from \"react\";\nexport default function LinesPage(props){\n    const [allStations, setAllStations] = useState({\"GOLD\":[],\"RED\":[],\"BLUE\":[],\"GREEN\":[]}); //Should be a list of station names\n    const [allTrains, setAllTrains] = useState([]); //Should be a list of train objects\n    const [color, setColor] = useState(\"GOLD\");\n    const [stationList, setStation] = useState([\"\"]);\n    const [arriving, setArriving] = useState(null); //3 states, null, Arriving, or Scheduled. \n    const [direction,setDirection] = useState(null); // N, W, E, S, or null for all.\n    const [loading, setLoading] = useState(true);\n \n    useEffect(() =>{\n        async function getStations() {\n            const stations = {};\n            let goldData = await fetch(\"http://13.59.196.129:3001/stations/gold\");\n            goldData = await goldData.json();\n            stations[\"GOLD\"] = goldData;\n            let redData = await fetch(\"http://13.59.196.129:3001/stations/red\");\n            redData = await redData.json();\n            stations[\"RED\"] = goldData;\n\n            let blueData = await fetch(\"http://13.59.196.129:3001/stations/blue\");\n            blueData = await blueData.json();\n            stations[\"BLUE\"] = blueData;\n\n            let greenData = await fetch(\"http://13.59.196.129:3001/stations/green\");\n            greenData = await greenData.json();\n            stations[\"GREEN\"] = greenData;\n            setAllStations(stations);\n            \n        }\n    });\n    return (<div className=\"lines-page\">\n        <div className = \"lines\">\n        <LineSelect updateColor = {setColor}/>\n        </div>\n        <div className=\"header\">{color}</div>\n        <div className=\"station-train\">\n        <div className = \"nav\">\n    <NavBar color={color}></NavBar>\n        </div>\n        \n        <div className = \"buttons\">\n        \n        \\\n\n\n\n        </div>\n        <div className = \"train-list\">\n\n        <TrainList color={color}></TrainList>\n        </div>\n        </div>\n            \n\n\n\n      \n        </div>);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}